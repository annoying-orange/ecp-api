# GraphQL schema example
#
# https://gqlgen.com/getting-started/

scalar Map

type Account {
  id: ID!
  name: String
  address: String!
  code: String
  referrals: [String!]
}

type Invite {
  address: String!
  link: String!
}

type Referral {
  address: String!
  joined: Int!
  earn: Float!
  labels: [String!]
  data: [Float!]
}

type Transaction {
  blockNumber: String!
  timeStamp: String!
  hash: String!
  nonce: String!
  blockHash: String!
  transactionIndex: String!
  from: String!
  to: String!
  value: String!
  gas: String!
  gasPrice: String!
  isError: String!
  txreceipt_status: String!
  input: String!
  contractAddress: String!
  cumulativeGasUsed: String!
  gasUsed: String!
  confirmations: String!
}

type TokenTransaction {
  blockNumber: String!
  timeStamp: String!
  hash: String!
  nonce: String!
  blockHash: String!
  from: String!
  contractAddress: String!
  to: String!
  value: String!
  tokenName: String!
  tokenSymbol: String!
  tokenDecimal: String!
  transactionIndex: String!
  gas: String!
  gasPrice: String!
  gasUsed: String!
  cumulativeGasUsed: String!
  input: String!
  confirmations: String!
}

type RecentTransactions {
  total: Int!
  labels: [String!]
  data: [Float!]
}

type Crowdsale {
  recentTransactions: RecentTransactions!
}

type Query {
  account(address: String!): Account!
  invite(address: String!): Invite!
  referral(address: String!, days: Int!): Referral!
  crowdsale(address: String!): Crowdsale!
}

input NewAccount {
  address: String!
  inviteCode: String
}

input NewTransaction {
  hash: String!
  from: String!
  to: String!
  value: String!
  referrals: [String!]
}

type Mutation {
  createAccount(input: NewAccount!): Account!
  createTransaction(input: NewTransaction!): Transaction!
}
